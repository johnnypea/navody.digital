<%= render 'form' %>

<%= form_for @submission_form, url: upvs_submissions_new_path do |f| %>

  <%#  todo this will be appended XML by JS %>
  <%= f.hidden_field :form, value: nil %>
  <%= f.hidden_field :callback_url, value: apps_business_register_app_callback_url %>

  <%= f.hidden_field :recipient_uri %>
  <%= f.hidden_field :posp_version %>
  <%= f.hidden_field :posp_id %>
  <%= f.hidden_field :message_type %>
  <%= f.hidden_field :message_subject %>
  <%= f.submit 'Submit' %>
<% end %>

<%= javascript_include_tag 'apps/ep_vote_app/libs.js', 'data-turbolinks-track': 'reload' %>

<script type="text/javascript" charset="utf-8">

  <!-- todo reuse existing function -->
  function debounce(fn, delay) {
    let timer = null;
    return function () {
      let context = this, args = arguments;
      clearTimeout(timer);
      timer = setTimeout(function () {
        fn.apply(context, args);
      }, delay);
    };
  }

  function initAll() {
    accessibleAutocomplete({
      element: document.getElementById('acts_submission_business_results'),
      id: 'acts_submission_business', // To match it to the existing <label>.
      source: debounce(async (query, populateResults) => {
        const res = await fetch(`/aplikacie/obchodny-register/search_business?q=${encodeURIComponent(query)}`);
        const data = (await res.json()).result;

        populateResults(data);
      }),
      onConfirm: async (result) => {
        document.getElementById('acts_submission_business_name').value = result?.name;
        document.getElementById('acts_submission_business_ico').value = result?.ico;
        document.getElementById('acts_submission_business_address').value = result?.address;

        const res = await fetch('/aplikacie/obchodny-register/search_acts?' + new URLSearchParams({
          oddiel: encodeURIComponent(result?.oddiel),
          vlozka: encodeURIComponent(result?.vlozka),
          sud: encodeURIComponent(result?.sud),
        }));
        const data = (await res.json()).result;

        const form = document.getElementById('acts_submission_form')

        form.outerHTML = data;

        console.log(data);
        // populate all acts
      },
      minLength: 3,
      templates: {
        inputValue: (result) => {
          return result?.name;
        },
        suggestion: (result) => {
          return `<strong>${result?.name}</strong>`
        }
      },
      confirmOnBlur: false,
      showNoOptionsFound: false,
      displayMenu: 'overlay',
      tNoResults: () => 'Žiadne výsledky',
    })
  }

  document.addEventListener('turbolinks:load', function () {
    initAll();
  });
</script>
