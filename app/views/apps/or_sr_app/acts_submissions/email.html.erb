<%= render partial: 'header' %>


<div id="acts-submission" class="govuk-grid-row">
  <div class="govuk-grid-column-two-thirds-from-desktop">
    <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
      <h2 class="govuk-fieldset__heading">Kontaktný e-mail pre posielanie notifikácií z OR SR</h2>
    </legend>
    <br />

    <div class="govuk-form-group">
      <%= form_for @application_form, :builder => AppFormBuilder, :id => "acts-fieldset", url: upvs_submissions_new_path do |f| %>
        <p class="govuk-label-wrapper">
          <label class="govuk-label govuk-label--s" for="event-name">
            Email
          </label>
        </p>

        <div class="govuk-grid-row">
          <div class="govuk-grid-column-two-thirds">
            <%= f.text_field :email, type: 'email', value: current_user.logged_in? ? current_user.email : nil %>
          </div>
        </div>
        <br />

        <%= render 'hidden_fields', form: f, current_step: 'email' %>
        <%= f.hidden_field :acts, value: @acts %>

        <button id="acts-submit-button" class="govuk-button govuk-!-margin-top-6" data-module="govuk-button" data-submit="true">
          Pokračovať ❯
        </button>
      <% end %>
    </div>

    <%= form_with model: @submission_form, url: upvs_submissions_new_path, scope: 'upvs_submission', html: { id: 'new_upvs_submissions_forms_application_for_document_copy' } do |f| %>
      <%= f.hidden_field :form, value: nil %>
      <%= f.hidden_field :callback_url, value: apps_or_sr_app_acts_submissions_callback_url %>
      <%= f.hidden_field :recipient_uri %>
      <%= f.hidden_field :posp_version %>
      <%= f.hidden_field :posp_id %>
      <%= f.hidden_field :message_type %>
      <%= f.hidden_field :message_subject %>
    <% end %>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  const continueEventHandlerOnClick = async (event) => {
    if (!event.target.matches('[data-submit="true"]')) return
    event.preventDefault();

    const company = document.getElementById('apps_or_sr_app_acts_submission_application_form_business_name').value
    const companyAddress = document.getElementById('apps_or_sr_app_acts_submission_application_form_business_address').value
    const companyCin = document.getElementById('apps_or_sr_app_acts_submission_application_form_business_cin').value
    const companySection = document.getElementById('apps_or_sr_app_acts_submission_application_form_business_section').value
    const companyInsertion = document.getElementById('apps_or_sr_app_acts_submission_application_form_business_insertion').value
    const companyCourt = document.getElementById('apps_or_sr_app_acts_submission_application_form_business_court').value
    const email = document.getElementById('apps_or_sr_app_acts_submission_application_form_email').value
    const acts = JSON.parse(document.getElementById('apps_or_sr_app_acts_submission_application_form_acts').value)

    let at = document.getElementById('authenticity-token').getAttribute('content')

    res = await post('/aplikacie/or-sr/listiny',
      {
        authenticity_token: at,
        apps_or_sr_app_acts_submission_application_form: {
          business_cin: companyCin,
          business_name: company,
          business_address: companyAddress,
          business_section: companySection,
          business_insertion: companyInsertion,
          business_court: companyCourt,
          email: email,
          acts: acts,
        }
      }
    ).then(res => res.text())

    document.getElementById('upvs_submission_form').value = res
    document.getElementById('new_upvs_submissions_forms_application_for_document_copy').submit();
  }

  const post = async (url, data) => {
    const response = await fetch(url, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Accept: 'application/xml',
      },
      body: JSON.stringify(data),
    })
    return response
  }

  const main = async () => {
    document.addEventListener(
      'click',
      function (event) {
        continueEventHandlerOnClick(event)
      },
      false
    )
  }

  document.addEventListener('turbolinks:load', function () {
    main().catch(console.log)
  })
</script>
